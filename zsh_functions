up(){
  local AMOUNT=$1
  for i in {1..$AMOUNT}
  do
    cd ..
  done
}

kp() {
  PID=$(echo $(lsof -n -i4TCP:$1) | awk 'NR==1{print $11}')
  kill -9 $PID
}

wu(){
  lsof -i tcp:$1
}

cln(){
  git clone $1
  code "$(basename "$1" .git)"
}

mcd () {
  mkdir -p $1
  cd $1
}

tscSetup(){
  npm i -D eslint @typescript-eslint/parser @typescript-eslint/eslint-plugin prettier eslint-config-prettier eslint-plugin-prettier @commitlint/cli @commitlint/config-conventional husky

  echo '{ "parser": "@typescript-eslint/parser", "parserOptions": { "project":"./tsconfig.json" }, "extends": [ "plugin:@typescript-eslint/recommended","plugin:prettier/recommended","prettier" ], "rules": {"@typescript-eslint/no-floating-promises": ["error"]} }' >> .eslintrc.json
  echo '{ "tabWidth": 2, "useTabs": false, "semi": true, "singleQuote": true, "trailingComma": "none", "arrowParens": "avoid" }' > .prettierrc.json
  echo '{ "extends": ["@commitlint/config-conventional"] }' > .commitlintrc.json

  npm set-script pretty "prettier --write src/**/*.ts"
  npm set-script pretty:check "prettier --check src/**/*.ts"
  npm set-script lint "eslint src/**/*.ts"
  npm set-script prepare "husky install"
  npm run prepare

  npx --yes husky add .husky/pre-commit "npm run pretty:check && npm run lint"
  git add .husky/pre-commit
}

lpmh () {
  #babel
  npm i -D @babel/eslint-parser @babel/preset-env @babel/plugin-proposal-class-properties
  #eslint
  npm i -D eslint eslint-config-prettier eslint-config-standard eslint-plugin-import eslint-plugin-node eslint-plugin-prettier@latest eslint-plugin-promise
  #prettier
  npm i -D --save-exact prettier
  #commitlint
  npm i -D @commitlint/cli @commitlint/config-conventional
  #mocha and chai
  npm i -D mocha chai

  npm set-script pretty "prettier --write src/**/*.ts"
  npm set-script pretty:check "prettier --check src/**/*.ts"
  npm set-script lint "eslint src/**/*.ts"
  npm set-script prepare "husky install"
  npm run prepare

  npx --yes husky add .husky/pre-commit "npm run pretty:check && npm run lint"
  git add .husky/pre-commit

  echo '{
  "env": {
      "es2021": true,
      "node": true,
      "mocha": true
    },
    "extends": ["standard", "plugin:prettier/recommended","prettier"],
    "parser": "@babel/eslint-parser",
    "parserOptions": {
      "ecmaVersion": 12,
      "sourceType": "module"
    },
    "rules": {}
  }' > .eslintrc.json

  echo '{
    "tabWidth": 2,
    "useTabs": false,
    "semi": true,
    "singleQuote": true,
    "trailingComma": "none",
    "arrowParens": "avoid"
  }' > .prettierrc.json

  echo '{
    "extends": ["@commitlint/config-conventional"]
  }' > .commitlintrc.json

  echo '{
    "presets": ["@babel/preset-env"],
    "plugins": ["@babel/plugin-proposal-class-properties"]
  }' > .babelrc.json

  echo '{
    "diff": true,
    "extension": ["js"],
    "package": "./package.json",
    "recursive": true,
    "spec": ["test/**/*.spec.js"]
  }' > .mocharc.json
}

basu(){
  npm i -D typescript ts-node @types/node
  #eslint
  npm i -D eslint eslint-config-prettier eslint-config-standard eslint-plugin-import eslint-plugin-react eslint-plugin-prettier@latest @typescript-eslint/parser @typescript-eslint/eslint-plugin
  #prettier
  npm i -D --save-exact prettier
  #commitlint
  npm i -D @commitlint/cli @commitlint/config-conventional

  echo '{
    "extends": [
      "eslint:recommended",
      "plugin:@typescript-eslint/recommended",
      "plugin:prettier/recommended",
      "prettier"
    ],
    "parser": "@typescript-eslint/parser",
    "parserOptions": {
      "ecmaVersion": 2021,
      "sourceType": "module",
    },
    "plugins": ["@typescript-eslint"],
    "rules": {
      "semi":["error","always"],
      "quotes":["error","single"]
    }
  }' > .eslintrc.json

  echo '{
    "tabWidth": 2,
    "useTabs": false,
    "semi": true,
    "singleQuote": true,
    "trailingComma": "none",
    "arrowParens": "avoid"
  }' > .prettierrc.json

  echo '{ "extends": ["@commitlint/config-conventional"] }' > .commitlintrc.json

  npm i -D husky

  npm set-script pretty "prettier --write src/**/*.ts"
  npm set-script pretty:check "prettier --check src/**/*.ts"
  npm set-script lint "eslint src/**/*.ts"
  npm set-script prepare "cd .. && husky install functions/.husky"
  npm run prepare

  npx --yes husky add .husky/pre-commit "cd functions && npm run pretty:check && npm run lint"
  git add --all
}

fesu(){
  #eslint
  npm i -D eslint eslint-config-prettier eslint-config-standard eslint-plugin-import eslint-plugin-react eslint-plugin-prettier@latest @typescript-eslint/parser @typescript-eslint/eslint-plugin
  #prettier
  npm i -D --save-exact prettier
  #commitlint
  npm i -D @commitlint/cli @commitlint/config-conventional

  echo '{
    "env": {
      "es2021": true
    },
    "extends": [
      "eslint:recommended",
      "plugin:react/recommended",
      "plugin:@typescript-eslint/recommended",
      "plugin:prettier/recommended",
      "prettier"
    ],
    "parser": "@typescript-eslint/parser",
    "parserOptions": {
      "ecmaFeature": {
        "jsx": true
      },
      "project": ["./tsconfig.json"]
    },
    "plugins": ["@typescript-eslint"],
    "rules": {
      "@typescript-eslint/no-floating-promises": 2
    },
    "settings": {
      "react": {
        "version": "^17"
      }
    }
  }' > .eslintrc.json

  echo '{
    "tabWidth": 2,
    "useTabs": false,
    "semi": true,
    "singleQuote": true,
    "trailingComma": "none",
    "arrowParens": "avoid"
  }' > .prettierrc.json

  echo '{
    "extends": ["@commitlint/config-conventional"]
  }' > .commitlintrc.json

  npm i -D husky

  npm set-script pretty "prettier --write src/**/*.tsx"
  npm set-script pretty:check "prettier --check src/**/*.tsx"
  npm set-script lint "eslint src/**/*.tsx"
  npm set-script prepare "cd .. && husky install hosting/.husky"
  npm run prepare

  npx --yes husky add .husky/pre-commit "cd hosting && npm run pretty:check && npm run lint"
  git add --all
}

md2pdf(){
  npx --yes markdown-pdf $1
}
